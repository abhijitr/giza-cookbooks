log_format timed '$remote_addr - $remote_user [$time_local] '
                 '"$request" $status $bytes_sent '
                 '"$http_referer" "$http_user_agent" '
                 'req=$request_time ups=$upstream_response_time';

upstream thumbor {
    server 127.0.0.1:9000;
    server 127.0.0.1:9001;
    server 127.0.0.1:9002;
    server 127.0.0.1:9003;
}

server {
  listen   80;
  server_name  <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log  <%= node[:nginx][:log_dir] %>/<%= @node[:hostname] %>.access.log timed;
  underscores_in_headers on;

  # Replace ELB ip address with actual forwarded address
  set_real_ip_from  10.0.0.0/8;
  real_ip_header    X-Forwarded-For;

  location ^~ /dimg/ {
    # rewrite rule for legacy image keys 
    rewrite /dimg/(.*)/(AMI[0-9A-Za-z_\-]*)$ /unsafe/$1/<%= @application[:legacy_image_store] %>/dimg/$2  break;
    rewrite /dimg/(AMI[0-9A-Za-z_\-]*)$ /unsafe/<%= @application[:legacy_image_store] %>/dimg/$1  break;
    # rewrite rule for new style keys from s3
    rewrite /dimg/(.*)/([0-9A-Za-z]*\.(jpg|png)) /unsafe/$1/<%= @application[:image_store] %>/$2  break;
    rewrite /dimg/([0-9A-Za-z]*\.(jpg|png)) /unsafe/<%= @application[:image_store] %>/$1  break;

    proxy_pass http://thumbor;
  }
  
  # Block all svn access
  if ($request_uri ~* ^.*\.svn.*$) {
     return 404;
  }
  
  # Block all git access
  if ($request_uri ~* ^.*\.git.*$) {
     return 404;
  }
  
  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }
}
